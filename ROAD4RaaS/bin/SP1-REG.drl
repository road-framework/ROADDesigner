import au.edu.swin.ict.road.composite.rules.events.contract.MessageRecievedEvent;
import au.edu.swin.ict.road.composite.rules.events.contract.ObligationComplianceEvent;
import au.edu.swin.ict.road.composite.rules.events.contract.TermExecutedEvent;
import au.edu.swin.ict.road.composite.contract.Contract;
import au.edu.swin.ict.road.composite.message.MessageWrapper;
import au.edu.swin.ict.road.regulator.FactObject;
import au.edu.swin.ict.road.regulator.FactTupleSpace;
import au.edu.swin.ict.road.regulator.FactTupleSpaceRow;
import java.util.List;
import au.edu.swin.ict.road.composite.message.DroolsMsgUtil;

/** Global Variables **/
global Contract contract;
global FactTupleSpace fts;

/** Events **/
declare MessageRecievedEvent
    @role(event)
end

declare TermExecutedEvent
    @role(event)
    @expires(24h)
end

declare ObligationComplianceEvent
    @role(event)
    @expires(24h)
end

/** Permission Rules **/
rule "CreateProvider"
	salience 50
    when
		$event : MessageRecievedEvent(operationName == "CreateProvider")
    then
    	System.out.println("CreateProvider called");
		MessageWrapper mw = $event.getMessageWrapper();
		boolean blocked = DroolsMsgUtil.isBlocked(mw, fts);
		$event.setBlocked(blocked);
		if(!blocked && !mw.isResponse())
		{
			DroolsMsgUtil.updateUserInvStat(mw, fts);
		}
end

rule "CreateProvider2"
	salience 30
    when
		$event : MessageRecievedEvent(operationName == "CreateProvider")
    then
    	System.out.println("CreateProvider called");
		
end

rule "CreateService"
	salience 50
    when
		$event : MessageRecievedEvent(operationName == "CreateService")
    then
    	System.out.println("CreateService called");
		MessageWrapper mw = $event.getMessageWrapper();
		boolean blocked = DroolsMsgUtil.isBlocked(mw, fts);
		$event.setBlocked(blocked);
		if(!blocked && !mw.isResponse())
		{
			DroolsMsgUtil.updateUserInvStat(mw, fts);
		}	
end

rule "CreateService2"
	salience 30
    when
		$event : MessageRecievedEvent(operationName == "CreateService")
    then
    	System.out.println("CreateService called");
				
end

rule "CreateCapability"
	salience 50
    when
		$event : MessageRecievedEvent(operationName == "CreateCapability")
    then
    	System.out.println("CreateCapability called");
		MessageWrapper mw = $event.getMessageWrapper();
		boolean blocked = DroolsMsgUtil.isBlocked(mw, fts);
		$event.setBlocked(blocked);
		if(!blocked && !mw.isResponse())
		{
			DroolsMsgUtil.updateUserInvStat(mw, fts);
		}	
end

rule "CreateCapability2"
	salience 30
    when
		$event : MessageRecievedEvent(operationName == "CreateCapability")
    then
    	System.out.println("CreateCapability called");
				
end

rule "CreateTechnicalInterface"
	salience 50
    when
		$event : MessageRecievedEvent(operationName == "CreateTechnicalInterface")
    then
    	System.out.println("CreateTechnicalInterface called");
		MessageWrapper mw = $event.getMessageWrapper();
		boolean blocked = DroolsMsgUtil.isBlocked(mw, fts);
		$event.setBlocked(blocked);
		if(!blocked && !mw.isResponse())
		{
			DroolsMsgUtil.updateUserInvStat(mw, fts);
		}
end

rule "CreateTechnicalInterface2"
	salience 30
    when
		$event : MessageRecievedEvent(operationName == "CreateTechnicalInterface")
    then
    	System.out.println("CreateTechnicalInterface called");
		
end

rule "Setcapabilities"
	salience 50
    when
		$event : MessageRecievedEvent(operationName == "Setcapabilities")
    then
    	System.out.println("Setcapabilities called");
		MessageWrapper mw = $event.getMessageWrapper();
		boolean blocked = DroolsMsgUtil.isBlocked(mw, fts);
		$event.setBlocked(blocked);
		if(!blocked && !mw.isResponse())
		{
			DroolsMsgUtil.updateUserInvStat(mw, fts);
			DroolsMsgUtil.updateServiceInvStat(mw, fts);
		}
end

rule "Setcapabilities2"
	salience 30
    when
		$event : MessageRecievedEvent(operationName == "Setcapabilities")
    then
    	System.out.println("Setcapabilities called");
		
end

rule "SettechnicalInterfaces"
	salience 50
    when
		$event : MessageRecievedEvent(operationName == "SettechnicalInterfaces")
    then
    	System.out.println("SettechnicalInterfaces called");
		MessageWrapper mw = $event.getMessageWrapper();
		boolean blocked = DroolsMsgUtil.isBlocked(mw, fts);
		$event.setBlocked(blocked);
		if(!blocked && !mw.isResponse())
		{
			DroolsMsgUtil.updateUserInvStat(mw, fts);
			DroolsMsgUtil.updateServiceInvStat(mw, fts);
		}
end

rule "SettechnicalInterfaces2"
	salience 30
    when
		$event : MessageRecievedEvent(operationName == "SettechnicalInterfaces")
    then
    	System.out.println("SettechnicalInterfaces called");
		
end

rule "GetService"
	salience 50
    when
		$event : MessageRecievedEvent(operationName == "GetService")
    then
    	System.out.println("GetService called");
		MessageWrapper mw = $event.getMessageWrapper();
		boolean blocked = DroolsMsgUtil.isBlocked(mw, fts);
		$event.setBlocked(blocked);
		if(!blocked && !mw.isResponse())
		{
			DroolsMsgUtil.updateUserInvStat(mw, fts);
			DroolsMsgUtil.updateServiceInvStat(mw, fts);
		}
end

rule "GetService2"
	salience 30
    when
		$event : MessageRecievedEvent(operationName == "GetService")
    then
    	System.out.println("GetService called");
		
end